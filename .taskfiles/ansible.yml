---
version: '3'

env:
    ANSIBLE_CONFIG: '{{.PROJECT_DIR}}/ansible.cfg'

vars:
    ANSIBLE_PLAYBOOK_DIR: '{{.ANSIBLE_DIR}}/playbooks'
    ANSIBLE_INVENTORY_DIR: '{{.ANSIBLE_DIR}}/inventory'

tasks:
    deps:
        desc: Upgrade Ansible galaxy deps
        dir: ansible
        cmds:
            - 'ansible-galaxy install -r requirements.yml'

    playbook:setup:
        desc: Setup all ubuntu nodes
        dir: ansible
        cmds:
            - 'ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.ini {{.ANSIBLE_PLAYBOOK_DIR}}/site.yml'

    playbook:k3sup:
        desc: Performe k3sup
        dir: ansible
        cmds:
            - 'ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.ini {{.ANSIBLE_PLAYBOOK_DIR}}/k3sup.yml'

    list:
        desc: List all the hosts
        dir: ansible
        cmds:
            - 'ansible all -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.ini --list-hosts'

    adhoc:ping:
        desc: Ping all the hosts
        dir: ansible
        cmds:
            - "ansible all -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.ini --one-line -m 'ping'"

    adhoc:uptime:
        desc: Uptime of all the hosts
        dir: ansible
        cmds:
            - ansible all -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.ini --one-line -a 'uptime'

    adhoc:reboot:
        desc: Reboot all the k3s nodes
        dir: ansible
        cmds:
            - "ansible kubernetes -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.ini -a '/usr/bin/systemctl reboot' --become"

    adhoc:poweroff:
        desc: Shutdown all the k3s nodes
        dir: ansible
        cmds:
            - "ansible kubernetes -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.ini -a '/usr/bin/systemctl poweroff' --become"
